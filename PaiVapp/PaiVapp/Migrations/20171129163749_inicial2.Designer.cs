// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PaiVapp.Data;
using System;

namespace PaiVapp.Migrations
{
    [DbContext(typeof(PaiVContext))]
    [Migration("20171129163749_inicial2")]
    partial class inicial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaiVapp.Models.Biologico", b =>
                {
                    b.Property<int>("BiologicoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<bool>("Estado");

                    b.Property<string>("NBiologico")
                        .HasMaxLength(20);

                    b.HasKey("BiologicoID");

                    b.ToTable("Biologico");
                });

            modelBuilder.Entity("PaiVapp.Models.CategoriaServicio", b =>
                {
                    b.Property<int>("CategoriaServicioID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .HasMaxLength(40);

                    b.Property<bool>("Estado");

                    b.Property<string>("NCategoria")
                        .HasMaxLength(15);

                    b.HasKey("CategoriaServicioID");

                    b.ToTable("CategoriaServicio");
                });

            modelBuilder.Entity("PaiVapp.Models.Departamento", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodDepartamento");

                    b.Property<bool>("Estado");

                    b.Property<string>("NDepartamento")
                        .HasMaxLength(50);

                    b.Property<int>("PaisID");

                    b.HasKey("DepartamentoID");

                    b.HasIndex("PaisID");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("PaiVapp.Models.Distrito", b =>
                {
                    b.Property<int>("DistritoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodDistrito");

                    b.Property<int>("DepartamentoID");

                    b.Property<bool>("Estado");

                    b.Property<string>("NDistrito")
                        .HasMaxLength(50);

                    b.HasKey("DistritoID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("PaiVapp.Models.Dosis", b =>
                {
                    b.Property<int>("DosisID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<string>("NDosis")
                        .HasMaxLength(15);

                    b.HasKey("DosisID");

                    b.ToTable("Dosis");
                });

            modelBuilder.Entity("PaiVapp.Models.DosisBiologico", b =>
                {
                    b.Property<int>("DosisBiologicoID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BiologicoID");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int>("DosisID");

                    b.Property<int>("EdadID");

                    b.HasKey("DosisBiologicoID");

                    b.HasIndex("BiologicoID");

                    b.HasIndex("DosisID");

                    b.HasIndex("EdadID");

                    b.ToTable("DosisBiologico");
                });

            modelBuilder.Entity("PaiVapp.Models.Edad", b =>
                {
                    b.Property<int>("EdadID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<string>("NEdad")
                        .HasMaxLength(15);

                    b.Property<int>("Semanas");

                    b.HasKey("EdadID");

                    b.ToTable("Edad");
                });

            modelBuilder.Entity("PaiVapp.Models.Pais", b =>
                {
                    b.Property<int>("PaisID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Estado");

                    b.Property<string>("NPais")
                        .HasMaxLength(50);

                    b.HasKey("PaisID");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("PaiVapp.Models.RegionSanitaria", b =>
                {
                    b.Property<int>("RegionSanitariaID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CodRS");

                    b.Property<int>("DepartamentoID");

                    b.Property<bool>("Estado");

                    b.Property<string>("NRegionS")
                        .HasMaxLength(20);

                    b.HasKey("RegionSanitariaID");

                    b.HasIndex("DepartamentoID")
                        .IsUnique();

                    b.ToTable("RegionSanitaria");
                });

            modelBuilder.Entity("PaiVapp.Models.Servicio", b =>
                {
                    b.Property<int>("ServicioID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Cabecera");

                    b.Property<int>("CategoriaServicioID");

                    b.Property<int>("CodServicio");

                    b.Property<int>("DistanciaRS");

                    b.Property<int>("DistritoID");

                    b.Property<bool>("Estado");

                    b.Property<string>("NServicio")
                        .HasMaxLength(50);

                    b.Property<int>("PoblacionMenor");

                    b.Property<int?>("RegionSanitariaID")
                        .IsRequired();

                    b.Property<int>("TipoServicio");

                    b.HasKey("ServicioID");

                    b.HasIndex("CategoriaServicioID");

                    b.HasIndex("DistritoID");

                    b.HasIndex("RegionSanitariaID");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("PaiVapp.Models.Departamento", b =>
                {
                    b.HasOne("PaiVapp.Models.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaiVapp.Models.Distrito", b =>
                {
                    b.HasOne("PaiVapp.Models.Departamento", "Departamento")
                        .WithMany("Distritos")
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaiVapp.Models.DosisBiologico", b =>
                {
                    b.HasOne("PaiVapp.Models.Biologico", "Biologico")
                        .WithMany("DosisBiologicos")
                        .HasForeignKey("BiologicoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaiVapp.Models.Dosis", "Dosis")
                        .WithMany("DosisBiologico")
                        .HasForeignKey("DosisID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaiVapp.Models.Edad", "Edad")
                        .WithMany("DosisBiologicos")
                        .HasForeignKey("EdadID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaiVapp.Models.RegionSanitaria", b =>
                {
                    b.HasOne("PaiVapp.Models.Departamento", "Departamento")
                        .WithOne("RegionSanitaria")
                        .HasForeignKey("PaiVapp.Models.RegionSanitaria", "DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PaiVapp.Models.Servicio", b =>
                {
                    b.HasOne("PaiVapp.Models.CategoriaServicio", "CategoriaServicio")
                        .WithMany("Servicios")
                        .HasForeignKey("CategoriaServicioID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaiVapp.Models.Distrito", "Distrito")
                        .WithMany("Servicios")
                        .HasForeignKey("DistritoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PaiVapp.Models.RegionSanitaria", "RegionSanitaria")
                        .WithMany("Servicios")
                        .HasForeignKey("RegionSanitariaID");
                });
#pragma warning restore 612, 618
        }
    }
}
